name: CI Tests

on:
  - push
  - pull_request

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
        compiler:
          - gcc
          - clang
        dqlite-next:
          - yes
          - no
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up dependencies
      run: |
          sudo apt update
          sudo apt install -y lcov libsqlite3-dev liblz4-dev libuv1-dev

    - name: Build dqlite
      env:
        CC: ${{ matrix.compiler }}
      run: |
          autoreconf -i
          ./configure --enable-debug --enable-code-coverage --enable-sanitize \
                      --enable-build-raft --enable-dqlite-next=${{ matrix.dqlite-next }}
          make -j$(nproc) check-norun

    - name: Test
      env:
        CC: ${{ matrix.compiler }}
        LIBDQLITE_TRACE: 1
      run: |
          # Temporary measure: don't use `make check` because then we won't see
          # the partial test output when there's a hang in CI.
          bins="$(make print-test-programs)"
          for bin in $bins; do ./$bin || touch any-failed; done 2>&1 | tee -a test-suite.log
          test '!' -e any-failed

    - name: OnTestFailure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: test-suite.log
        path: test-suite.log

    - name: Coverage
      env:
        CC: ${{ matrix.compiler }}
      if: ${{ matrix.os == 'ubuntu-22.04' && matrix.compiler == 'gcc' }}
      run: |
        make code-coverage-capture

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        verbose: true
